<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2025/04/09/%E4%BC%9A%E8%AE%AE%E5%8F%91%E8%A8%80%E8%8D%89%E7%A8%BF/"/>
      <url>/2025/04/09/%E4%BC%9A%E8%AE%AE%E5%8F%91%E8%A8%80%E8%8D%89%E7%A8%BF/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/04/09/a%20try/"/>
      <url>/2025/04/09/a%20try/</url>
      
        <content type="html"><![CDATA[<h1 id="学习备忘录-kaggle-python"><a href="#学习备忘录-kaggle-python" class="headerlink" title="学习备忘录 &#x2F;&#x2F;kaggle_python"></a>学习备忘录 &#x2F;&#x2F;kaggle_python</h1><h2 id="第一节-变量"><a href="#第一节-变量" class="headerlink" title="第一节 变量"></a>第一节 变量</h2><p>第一节主要简单介绍了python的基本用法，包括变量赋值、运算符（<em>&#x2F;和&#x2F;&#x2F;的区别</em>、<em>字符串和数字的乘法</em>）、print函数和判断关键词if.附带介绍了type（），对数据的函数max（） abs（） 、还有数据类型转换函数float（） int（）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">spam_amount = 0</span><br><span class="line">print(spam_amount)</span><br><span class="line"></span><br><span class="line"># Ordering Spam, egg, Spam, Spam, bacon and Spam (4 more servings of Spam)</span><br><span class="line">spam_amount = spam_amount + 4</span><br><span class="line"></span><br><span class="line">if spam_amount &gt; 0:</span><br><span class="line">    print(&quot;But I don&#x27;t want ANY spam!&quot;)</span><br><span class="line"></span><br><span class="line">viking_song = &quot;Spam &quot; * spam_amount</span><br><span class="line">print(viking_song)  //python名字起源于英国喜剧团monty python，此段代码为致敬</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">But I don&#x27;t want ANY spam!</span><br><span class="line">Spam Spam Spam Spam </span><br></pre></td></tr></table></figure><p>易忘知识点：</p><ul><li>&#x2F;为浮点除法 &#x2F;&#x2F;为除法后取整</li><li>print可以接受表达式，还可以用，分隔多个字符串，达到连接字符串输出的效果。</li><li>输出字符串和数字相乘的结果里，每个字符串会默认用一个空格分割开</li><li>在练习里有一个小技巧，要交换数据a和b的值，可以使用a,b&#x3D;b,a这种简单写法，其中涉及元组的知识。</li></ul><h2 id="第二节-函数"><a href="#第二节-函数" class="headerlink" title="第二节 函数"></a>第二节 函数</h2><p>学习函数，首先要了解内置好的函数，我们可以使用help（）中间填入函数名来了解函数的作用。<a href="https://chatgpt.com/share/6805df72-a69c-8003-9c5e-f0872f6a1d75">说明文档中一般会出现的英文自查</a>；除了内置函数，我们也可以使用def关键字创建自建函数，示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def least_difference(a, b, c):</span><br><span class="line">    &quot;&quot;&quot;Return the smallest difference between any two numbers</span><br><span class="line">    among a, b and c.</span><br><span class="line">    </span><br><span class="line">    &gt;&gt;&gt; least_difference(1, 5, -5)</span><br><span class="line">    4</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    diff1 = abs(a - b)</span><br><span class="line">    diff2 = abs(b - c)</span><br><span class="line">    diff3 = abs(a - c)</span><br><span class="line">    return min(diff1, diff2, diff3)</span><br></pre></td></tr></table></figure><p>tips:</p><ul><li>这里使用三引号包裹的是对函数的介绍，最好写上，除非你的代码用一次后就不再使用。</li><li>return语句不是必须的，当return语句不在时，函数会返回null</li></ul><p>函数的参数不仅可以是数据，还可以是函数，这种函数叫做高阶函数。</p><p>最后介绍max（）函数的两种用法，一种是直接填入多个可比较的参数，数字按照大小排序，字符按照Unicode排序，另一种是填入一个可迭代对象，比如列表、元组，max会遍历并比较这个可迭代对象内部的数据得出最大值。可配合key来比较。<br><a href="https://chatgpt.com/share/6805de00-6a40-8003-b65e-ac6adb90aecd">max两种用法</a></p><p>在练习中出现了一个round（）函数的介绍，这是help（round）的输出结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Help on built-in function round in module builtins:</span><br><span class="line"></span><br><span class="line">round(number, ndigits=None)</span><br><span class="line">    Round a number to a given precision in decimal digits.</span><br><span class="line"></span><br><span class="line">    The return value is an integer if ndigits is omitted or None.  Otherwise</span><br><span class="line">    the return value has the same type as the number.  ndigits may be negative.</span><br></pre></td></tr></table></figure><p><a href="https://chatgpt.com/share/6805e2cf-3894-8003-bd20-092e78d34cce">gpt对round的介绍</a></p><h2 id="第三节-布尔和条件语句"><a href="#第三节-布尔和条件语句" class="headerlink" title="第三节 布尔和条件语句"></a>第三节 布尔和条件语句</h2><p>介绍了布尔值，布尔值可以通过比较语句得到，也可以组合布尔值，使用and、or和not表达更复杂的事件，推荐加上括号提升可阅读性。还介绍了if elif else语句。以下是实例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def inspect(x):</span><br><span class="line">    if x == 0:</span><br><span class="line">        print(x, &quot;is zero&quot;)</span><br><span class="line">    elif x &gt; 0:</span><br><span class="line">        print(x, &quot;is positive&quot;)</span><br><span class="line">    elif x &lt; 0:</span><br><span class="line">        print(x, &quot;is negative&quot;)</span><br><span class="line">    else:</span><br><span class="line">        print(x, &quot;is unlike anything I&#x27;ve ever seen...&quot;)</span><br></pre></td></tr></table></figure><p>默认，0为false,其他数字为true,空字符串为false,非空为true</p><h2 id="第四节-列表"><a href="#第四节-列表" class="headerlink" title="第四节 列表"></a>第四节 列表</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/03/06/hello-world/"/>
      <url>/2025/03/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
